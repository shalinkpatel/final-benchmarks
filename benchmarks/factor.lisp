(define (div x y)
  (do-div x y 0))
(define (do-div x y acc)
  (if (< x y)
    (if (= x 0) acc ())
    (do-div (- x y) y (add1 acc))))
(define (do-factor x n)
  (if (= n 1) true
    (if (empty? (div x n)) (do-factor x (sub1 n))
      (pair n (div x n)))))
(define (factor x)
  (do-factor x (sub1 x)))
(define (factor-all x)
  (if (pair? (factor x))
    (pair (factor-all (left (factor x))) (factor-all (right (factor x))))
    x))
(do
  (print (factor-all 512))
  (newline)
  (print (factor-all 8911))
  (newline)
  (print (factor-all 65537))
  (newline))
