(define (func1 x)
  (if (num? x) (pair 0 (func2 x))
    (not (func1 x))))
(define (func2 y)
  (if (= 3 (add1 y)) (- y 1)
    (not (func1 y))))
(let ((x (read-num))) (let ((y (read-num))) (let ((z (read-num)))
  (pair (func1 x) (pair (func1 y) (func2 z))))))